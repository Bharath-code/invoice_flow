---
import { getWaitlistCount } from '../lib/supabase.js';

// Get initial count from Supabase
let initialCount = 0;
try {
  const result = await getWaitlistCount();
  if (result.success && typeof result.count === 'number') {
    initialCount = result.count;
  } else {
    initialCount = 0;
  }
} catch (error) {
  // Expected when Supabase is not configured
  console.log('Waitlist count unavailable - Supabase not configured');
  initialCount = 0;
}
---

<div class="live-counter">
  <div class="counter-container">
    <div class="counter-icon">
      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="2">
        <path stroke-linecap="round" stroke-linejoin="round" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
      </svg>
    </div>
    <span class="text-sm font-medium text-gray-700">
      <span id="counter-number">{initialCount}</span> founders already in
    </span>
  </div>
</div>

<style>
  .live-counter {
    display: inline-flex;
    align-items: center;
    padding: 0.5rem 1rem;
    background: linear-gradient(to right, #eff6ff, #faf5ff);
    border: 1px solid #dbeafe;
    border-radius: 9999px;
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  }

  .counter-container {
    display: flex;
    align-items: center;
  }

  .counter-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 24px;
    height: 24px;
    background: linear-gradient(135deg, #2563eb, #3b82f6);
    border-radius: 50%;
    margin-right: 0.75rem;
    animation: iconPulse 2s ease-in-out infinite;
    box-shadow: 0 2px 8px rgba(37, 99, 235, 0.3);
  }
  
  .counter-icon svg {
    color: white;
  }

  @keyframes countUp {
    from { transform: translateY(10px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
  }

  @keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
  }

  @keyframes iconPulse {
    0% { 
      transform: scale(1);
      opacity: 1;
    }
    50% { 
      transform: scale(1.1);
      opacity: 0.8;
    }
    100% { 
      transform: scale(1);
      opacity: 1;
    }
  }

  .count-animation {
    animation: countUp 0.3s ease-out;
  }

  .pulse-effect {
    animation: pulse 0.6s ease-in-out;
  }

  .icon-pulse-active {
    animation: iconPulse 0.8s ease-in-out 2;
  }
</style>

<script>
  // Track current count to avoid unnecessary updates
  let currentCount = 0;
  
  // Initialize current count from DOM
  document.addEventListener('DOMContentLoaded', () => {
    const counterElement = document.getElementById('counter-number');
    if (counterElement) {
      currentCount = parseInt(counterElement.textContent) || 0;
    }
  });

  // Update counter periodically
  function updateCounter() {
    fetch('/api/waitlist-count')
      .then(response => {
        if (response.ok) {
          return response.json();
        } else {
          // API not available (likely Supabase not configured)
          throw new Error('API not available');
        }
      })
      .then(data => {
        const counterElement = document.getElementById('counter-number');
        if (counterElement && typeof data.count === 'number') {
          const newCount = data.count;
          
          if (newCount !== currentCount) {
            currentCount = newCount;
            counterElement.classList.add('count-animation');
            counterElement.textContent = newCount;
            
            // Add pulse effect to container and icon
            const liveCounter = document.querySelector('.live-counter');
            const counterIcon = document.querySelector('.counter-icon');
            
            if (liveCounter) {
              liveCounter.classList.add('pulse-effect');
              setTimeout(() => {
                liveCounter.classList.remove('pulse-effect');
              }, 600);
            }
            
            if (counterIcon) {
              counterIcon.classList.add('icon-pulse-active');
              setTimeout(() => {
                counterIcon.classList.remove('icon-pulse-active');
              }, 1600); // 0.8s * 2 iterations
            }
            
            setTimeout(() => {
              counterElement.classList.remove('count-animation');
            }, 300);
          }
        } else if (counterElement && data.error) {
          // Handle error case gracefully
          console.log('Counter API error:', data.error);
        }
      })
      .catch(error => {
        // Expected when Supabase is not configured
        console.log('Counter update unavailable - Supabase not configured');
      });
  }

  // Update every 30 seconds
  setInterval(updateCounter, 30000);

  // Initial update after 5 seconds
  setTimeout(updateCounter, 5000);
</script>